/*重置样式*/
html,body{height: 100%;overflow: hidden;}
html,body,h1,h2,h3,h4,h5,h6,p,ul,li{margin: 0px;padding: 0px;font: 14px "微软雅黑";}
a{text-decoration: none;display: block;}
li{list-style: none;}
img{display: block;}

/*common css 开始*/
.clearfix{*zoom: 1;}
.clearfix:after{content: "";display: block;clear: both;}
.commonTitle{ color:#009ee0; font-size:80px; line-height:0.8;font-weight:bold; letter-spacing:-5px;}
.commonText{color: white;line-height: 1.5; font-size:15px;}
/*common css 结束*/

/*头部样式*/
/*导航栏的实现：
 	把li设置为相对定位，li下的up为绝对定位，这时down会占据up原来的位置，up在down的上方
 	width为0，设置overflow为hidden可以隐藏up
 	transition: 1s width;效果过度
 	li：hover时 up的width为100%让up重新在down的上头*/
#head > .headMain{width: 1100px;height: 80px;/*background: skyblue;*/margin: 0 auto;position: relative;}
#head > .headMain > .logo{float: left;margin-top: 30px;}
#head > .headMain > .nav{float: right;margin-top: 50px;}
#head > .headMain > .nav > .list > li{float: left;margin-left: 40px;position: relative;}
#head > .headMain > .nav > .list > li .up{position: absolute;width:0;overflow: hidden;
				transition: 1s width;color: #000000;}
#head > .headMain > .nav > .list > li:hover .up{width: 100%;}
#head > .headMain > .arrow{width: 21px;height: 11px;background: url(../img/menuIndicator.png);
				position: absolute;bottom: -11px;left: 50%;transition: 1s left;z-index: 9;}

#content{position: relative;overflow: hidden;width: 100%;}
#content > .list{position: absolute;width: 100%;left: 0;top: 0;transition: 1s top;}
#content > .list > li{position: relative;}
#content > .list > li > div{width: 1100px;height: 520px;/*background: pink;*/position: absolute;
				left: 0;right: 0;top: 0;bottom: 0;margin: auto;}

/*第一屏
 *home1下的li全部设置为绝对定位,此时第四屏再最上方，用visibility: hidden隐藏这四屏
 *给第一屏多加一个class=activity  再这个类里设置显示，最终效果就是显示第一屏
 *
 * 圆点：
 * 给ul设置绝对定位，决定圆点的位置
 * 用display: inline-block;将li转换成行内块级元素，让圆点为一排
 * 
 * 3D图片切换：
 * perspective 属性指定了观察者与z=0平面的距离，transform-style属性确定元素的子元素是否位于3D空间中
 * 接下来就是一个动画效果，
 * 设置css属性，通过js添加相应的类到元素中
 * 左到右：
 * css属性上，左的最终效果为隐藏，animation执行一次，
 * 0%时为显示，50%时沿X轴向左偏移-40%，绕Y轴旋转30deg，缩放为原来的0.8倍，100%时在Z轴-200px处
 * 右的最终效果为显示，animation执行一次，
 * 0%时为隐藏，在Z轴-200px处，50%时向右偏移40%，绕Y轴旋转-30dg，缩放为原来的0.8倍
 * 
 * 右到左：
 * 左的最终效果为显示，animation执行一次，
 * 0%时为隐藏，在Z轴-200px处，50%时向左偏移40%，绕Y轴旋转30dg，缩放为原来的0.8倍
 * 右的最终效果为隐藏，animation执行一次，
 * 0%时为显示，50%时沿X轴向右偏移40%，绕Y轴旋转-30deg，缩放为原来的0.8倍，100%时在Z轴-200px处
 */
#content .list > .home{background: url(../img/bg1.jpg) no-repeat;}
#content .list > .home .home1{width: 100%;height: 100%;perspective: 1000px;transform-style: preserve-3d;}
#content .list > .home .home1 > li{position: absolute;left: 0;right: 0;top: 0;bottom: 0;
				visibility: hidden;}
#content .list > .home .home1 > li:nth-child(1){background:#dc6c5f;}
#content .list > .home .home1 > li:nth-child(2){background:#95dc84;}
#content .list > .home .home1 > li:nth-child(3){background:#64b9d2;}
#content .list > .home .home1 > li:nth-child(4){background:#000000;}
#content .list > .home .home1 > li > .item{color: white;text-align: center;margin-top: 200px;}
#content .list > .home .home1 > .active{visibility: visible;}
#content .list > .home .home2{position: absolute;left: 0;right: 0;bottom: 0;
				text-align: center;}
#content .list > .home .home2 > li{width: 20px;height: 20px;border-radius: 50%;
				background: rgba(255,255,255,0.5);display: inline-block;cursor: pointer;}
#content .list > .home .home2 > .active{background: white;cursor: default;}
/*从左往右移动	leftHidden + rightShow*/
#content .list > .home .home1 > .leftHidden{visibility: hidden;
				animation: 1s leftHidden linear 1;}
#content .list > .home .home1 > .rightShow{visibility: visible;
				animation: 1s rightShow linear 1;}
@keyframes leftHidden{
	0%{visibility: visible;}
	50%{transform: translateX(-40%) rotateY(30deg) scale(.8);}
	100%{transform: translateZ(-200px);}
}
@keyframes rightShow{
	0%{visibility: hidden;transform: translateZ(-200px);}
	50%{transform: translateX(40%) rotateY(-30deg) scale(.8);}
	100%{}
}
/*从右往左移动	leftShow + rightHidden*/
#content .list > .home .home1 > .leftShow{visibility: visible;
				animation: 1s leftShow linear 1;}
#content .list > .home .home1 > .rightHidden{visibility: hidden;
				animation: 1s rightHidden linear 1;}
@keyframes leftShow{
	0%{visibility: visible;transform: translateZ(-200px);}
	50%{transform: translateX(-40%) rotateY(30deg) scale(.8);}
	100%{}
}
@keyframes rightHidden{
	0%{visibility: visible;}
	50%{transform: translateX(40%) rotateY(-30deg) scale(.8);}
	100%{transform: translateZ(-200px);}
}







/*第二屏
 
 * 翻转页的实现：
 * box-sizing:content-box(默认值)设置宽高时设置的是内容的大小
 * box-sizing:border-box宽高设置的时整个盒子的大小，包括border和padding
 * 
 * 1.下面的盒子旋转180deg，背面不可见backface-visibility: hidden;,这时就只有上面的盒子可见
 * 2.hover时，下面的盒子rotateY（360deg），回到正面，这时为可见状态
 * 			  上面的盒子rotateY（180deg）
 * */
#content .list > .course{background: url(../img/bg2.jpg) no-repeat;}
#content .list > .course .course1{margin: 50px;}
#content .list > .course .course2{width: 400px;margin-left: 50px;}
#content .list > .course .course3{position: absolute;width: 480px;top: 70px;right: 50px;}
#content .list > .course .course3 > .item{float: left;width: 120px;height: 132px;
				position: relative;}
#content .list > .course .course3 > .item > .face,
#content .list > .course .course3 > .item > .backFace{position: absolute;left: 0;top: 0;width: 100%;
				height: 100%;box-sizing: border-box;padding: 15px;transition: 1s transform;}
#content .list > .course .course3 > .item > .backFace{background-position: 50% 50%!important;}
/*加backFace背景图*/
#content .list > .course .course3 > .item:nth-of-type(1) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(2) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(3) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(4) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(5) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(6) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(7) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(8) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(9) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(10) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(11) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item:nth-of-type(12) > .backFace{
				background: url(../img/bks.png) no-repeat;}
#content .list > .course .course3 > .item > .face{transform: rotateY(180deg);
				backface-visibility: hidden;background: #009ee0;color: white;}
#content .list > .course .course3 > .item:hover .face{transform: rotateY(360deg);}
#content .list > .course .course3 > .item:hover .backFace{transform: rotateY(180deg);}






/*第三屏
 *每个item中，字体本来在图片的下方，给item设置高度为图片的高度且overflow：hidden后，文字被隐藏
 *设置item宽度并左浮动，每一张图片占据图片宽度的宽度，再设置最后一张图片的宽度，来形成最终布局效果
 * item设置相对定位，文字设置绝对定位，此时文字再图片中，设置图片的opacity=0；文字无法被人看见
 * hover时，设置文字的opacity，让人看见，同时设置图片放大scale(1.5)倍，旋转rotate(30deg)
 * 机器人，是一个animation动画效果，设置它4s的线性运动，且不断循环
 * 0%时不运动，不旋转
 * 49%时已经向左运动490px,不旋转（不加49%的话,机器人会在0%到50%的中间持续绕Y轴旋转）
 * 50%时已经向左运动了500px，此时已经绕Y轴旋转了180deg
 * 100%时回到原位
 */
#content .list > .works{background: url(../img/bg3.jpg) no-repeat;}
#content .list > .works .work1{margin: 50px 0px 100px 50px;}
#content .list > .works .work2{margin-left: 50px;}
#content .list > .works .work2 > .item{width: 220px;height: 133px;float: left;margin: 0 1px;
				position: relative;overflow: hidden;}
#content .list > .works .work2 > .item:last-of-type{width: 332px;}
#content .list > .works .work2 > .item  .mask{position: absolute;left: 0;top: 0;right:0;bottom:0;
				color: white;box-sizing: border-box;padding: 10px;background: #000000;opacity: 0;
				transition: 1s opacity;}
#content .list > .works .work2 > .item > img{transition: 1s transform;}
#content .list > .works .work2 > .item:hover .mask{opacity: 0.8;}
#content .list > .works .work2 > .item:hover img{transform: scale(1.5) rotate(30deg);}
#content .list > .works .work3{background: url(../img/robot.png);position: absolute;left: 900px;
				top: 170px;width: 167px;height: 191px;animation: rootMove 4s linear infinite;}

@keyframes rootMove{
	0%{
		transform: translateX(0);
	}
	49%{
		transform: translateX(-490px) rotateY(0deg);
	}
	50%{
		transform: translateX(-500px) rotateY(180deg);
	}
	100%{
		transform: translateX(0px) rotateY(180deg);
	}
}





/*第四屏*/
#content .list > .about{background: url(../img/bg4.jpg) no-repeat;}
#content .list > .about .about1{margin: 50px 0 100px 50px;}
#content .list > .about .about2{margin-left: 50px;width: 400px;}
#content .list > .about .about3 > .item{position: absolute;width: 260px;height: 200px;
				border: 5px solid rgba(255,255,255,0.5);border-radius: 8px;overflow: hidden;}
#content .list > .about .about3 > .item:nth-child(1){left: 750px;top: 50px;}
#content .list > .about .about3 > .item:nth-child(2){left: 600px;top: 290px;}
#content .list > .about .about3 > .item > span,
#content .list > .about .about3 > .item > ul{position: absolute;left: 0;top: 0;right: 0;bottom: 0;}
#content .list > .about .about3 > .item:nth-child(1) > span{
				background: url(../img/about2.jpg);transform: scale(1.3);transition: 1s transform;}
#content .list > .about .about3 > .item:nth-child(2) > span{
				background: url(../img/about4.jpg);transform: scale(1.3);transition: 1s transform;}
#content .list > .about .about3 > .item:hover span{transform: scale(1);transition: 1s transform;}
#content .list > .about .about3 > .item > ul > li{float: left;overflow: hidden;position: relative;}
#content .list > .about .about3 > .item > ul > li > img{position: absolute;
				transition: 1s top,1s left;}






/*第五屏*/
#content .list > .team{background: url(../img/bg5.jpg) no-repeat;}
#content .list > .team .team1{width: 400px;margin: 50px;float: left;transition: 1s transform;}
#content .list > .team .team2{width: 400px;margin: 50px;float: right;transition: 1s transform;}

















